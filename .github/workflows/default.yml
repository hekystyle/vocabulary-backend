name: default

on:
  push:
    branches: ["*"]
  pull_request:
    branches: [master]

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: "yarn"

      - name: Restore node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - run: yarn install

  lint:
    needs: [deps]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: "yarn"

      - name: Restore node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - run: yarn run lint

  build:
    needs: [deps, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Restore node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          load: true
          tags: ghcr.io/${{ github.repository }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Export Docker image
        run: docker image save -o image.tar ghcr.io/${{ github.repository }}

      - name: Cache docker image
        uses: actions/cache@v3
        with:
          path: image.tar
          key: image-${{ github.sha }}

  test:
    if: ${{ false }}
    needs: [deps, lint, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: "yarn"

      - name: Restore node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - run: yarn run test

  publish:
    needs: [deps, lint, build]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && ( github.ref == 'refs/heads/publishing' || github.ref == 'refs/heads/master' ) }}
    steps:
      - name: Restore Docker image
        uses: actions/cache@v3
        with:
          path: image.tar
          key: image-${{ github.sha }}

      - name: Import Docker image
        run: docker image import image.tar ghcr.io/${{ github.repository }}

      - name: Create additional tags for Docker image
        run: docker image tag ghcr.io/${{ github.repository }} ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Push all Docker image tags to registry
        run: docker push --all-tags ghcr.io/${{ github.repository }}
