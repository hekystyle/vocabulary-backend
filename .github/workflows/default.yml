name: default

on:
  push:
    branches: ["*"]
  pull_request:
    branches: [master]

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: "yarn"

      - name: Restore node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - run: yarn install

  lint:
    needs: [deps]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: "yarn"

      - name: Restore node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - run: yarn run lint

  build:
    needs: [deps, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Restore node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - run: |
          docker build . -t ghcr.io/${{ github.repository }}:latest
          docker image save -o image.tar ghcr.io/${{ github.repository }}:latest

      - name: Cache docker image
        uses: actions/cache@v2
        with:
          path: image.tar
          key: image-${{ github.sha }}

  test:
    if: ${{ false }}
    needs: [deps, lint, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: "yarn"

      - name: Restore node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - run: yarn run test

  publish:
    needs: [deps, lint, build, test]
    runs-on: ubuntu-latest
    if: ${{ ( github.event_name == 'push' && github.ref == 'refs/heads/master' ) || github.ref == 'refs/heads/publishing' }}
    steps:
      - name: Restore docker image
        uses: actions/cache@v2
        with:
          path: image.tar
          key: image-${{ github.sha }}

      - run: |
          docker image import image.tar ghcr.io/${{ github.repository }}:latest
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
          docker push ghcr.io/${{ github.repository }}:latest
